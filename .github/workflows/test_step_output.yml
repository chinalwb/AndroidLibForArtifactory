
name: Test step output

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

        
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Get packages list
        run: |
          curl -X POST \
            -s \
            -H "Accept: application/vnd.github.package-deletes-preview+json" \
            -H "Authorization: bearer ${{ secrets.GITHUB_TOKEN }}" \
            -d '{"query":"query { repository(owner: \"chinalwb\", name:\"AndroidLibForArtifactory\") { packages(first: 20, names: \"com.chinalwb.libraries.droidlib\") {edges {node {id, name, versions(first:100) {edges {node {id, version}}}}}}}}"}' \
            -o /tmp/github_response.json \
            --url https://api.github.com/graphql
            
      - name: cat response
        run: cat /tmp/github_response.json
        
      - name: Filter version id
        run: echo -e "import json, sys\nf = open('/tmp/github_response.json',)\nobj = json.load(f)\npackages=obj['data']['repository']['packages']['edges'][0]['node']['versions']['edges']\nfor p in packages:\n  if p['node']['version'] == '2.0.7-SNAPSHOT':\n    idfile = open('/tmp/idfile', 'w')\n    idfile.write(p['node']['id'])\n    idfile.close()\n    break" | python

      - name: cat idfile
        run: cat /tmp/idfile
        
      - name: Set package version id
        id: versionIdStep
        run: echo "::set-output name=id::"$(cat /tmp/idfile)

      - name: Delete package version if exists
        # run: echo "package version id = " ${{ steps.versionIdStep.outputs.id }}
        uses: actions/delete-package-versions@v1
        if: steps.versionIdStep.outputs.id != ''
        with:
          package-version-ids: ${{ steps.versionIdStep.outputs.id }}
